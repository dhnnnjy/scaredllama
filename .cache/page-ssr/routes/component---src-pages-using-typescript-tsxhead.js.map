{"version":3,"file":"component---src-pages-using-typescript-tsxhead.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","description","metaDescription","siteMetadata","defaultTitle","social","twitter"],"sourceRoot":""}