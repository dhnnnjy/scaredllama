{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        © {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["React","StaticImage","Bio","data","author","site","siteMetadata","social","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Seo","description","metaDescription","defaultTitle","twitter","BlogPostTemplate","previous","next","markdownRemark","post","siteTitle","frontmatter","date","__html","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","Head","excerpt","pageQuery"],"sourceRoot":""}